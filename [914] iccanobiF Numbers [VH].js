/*
####  iccanobiF Numbers  ####

The Fibonacci sequence, as you know, is generated by iterative addition of the sum of the last two elements of the sequence to the end of the sequence, starting with [0, 1].
_________
Fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, …]
_________

The iccanobiF sequence (see Resources tab for more info) is generated in a similar way — except that the digits of the last two elements should first be reversed, then added together, then added to the sequence. Single-digit numbers are unaffected, so the first 8 elements are identical to the Fibonacci sequence:
_________
iccanobiF = [0, 1, 1, 2, 3, 5, 8, 13]
_________

The next element is the sum of the reverse of 8 (still 8), and the reverse of 13 — 31 (8 + 31 = 39).
_________
iccanobiF = [0, 1, 1, 2, 3, 5, 8, 13, 39]
_________

The next element is 31 + 93 = 124
_________
iccanobiF = [0, 1, 1, 2, 3, 5, 8, 13, 39, 124]
_________

And so on.
Create a function that takes a number n and returns the difference between the nth iccanobiF number and the nth Fibonacci number.


[Examples]

_________
iccMinusFib(4) ➞ 0
// For all n < 9, the difference is zero.

iccMinusFib(9) ➞ 18

iccMinusFib(18) ➞ 790920
_________



[Notes]

N/A


[loops] [math] [numbers] 



-------------------------------------------------------------------
[Resources]
___________________________
Fibonacci Number
https://en.wikipedia.org/wiki/Fibonacci_number
In mathematics, the Fibonacci numbers, commonly denoted Fn, form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, …
___________________________

*/
//Your code should go here:

